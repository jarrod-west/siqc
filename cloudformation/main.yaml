AWSTemplateFormatVersion: "2010-09-09"
Description: Basic resources to demonstrate scheduled in-queue callbacks

Parameters:
  InstanceArn:
    Type: String
    Description: The ARN of the Amazon Connect Instance
  PrivateNumberArn:
    Type: String
    Description: The ARN of the outbound contact number
  DeploymentBucket:
    Type: String
    Description: The name of the bucket that will store the lambda code
  DeploymentPath:
    Type: String
    Description: The "directory" in the bucket where the lambda code will be deployed
  DeploymentFilename:
    Type: String
    Description: The name of the lambda deployment package

Resources:
  # Connect Resources
  CallbackHours:
    Type: AWS::Connect::HoursOfOperation
    Properties:
      Name: Callback Hours
      Description: The hours for callbacks
      InstanceArn: !Ref InstanceArn
      TimeZone: Australia/Sydney # TODO: Configurable
      Tags:
        - Key: CreatedBy
          Value: Jarrod West
      Config:
        - Day: MONDAY
          StartTime:
            Hours: 9
            Minutes: 0
          EndTime:
            Hours: 17
            Minutes: 30
        - Day: TUESDAY
          StartTime:
            Hours: 9
            Minutes: 0
          EndTime:
            Hours: 17
            Minutes: 30
        - Day: WEDNESDAY
          StartTime:
            Hours: 9
            Minutes: 0
          EndTime:
            Hours: 17
            Minutes: 30
        - Day: THURSDAY
          StartTime:
            Hours: 9
            Minutes: 0
          EndTime:
            Hours: 17
            Minutes: 30
        - Day: FRIDAY
          StartTime:
            Hours: 9
            Minutes: 0
          EndTime:
            Hours: 17
            Minutes: 30
        - Day: SATURDAY
          StartTime:
            Hours: 9
            Minutes: 0
          EndTime:
            Hours: 17
            Minutes: 30
        - Day: SUNDAY
          StartTime:
            Hours: 9
            Minutes: 0
          EndTime:
            Hours: 17
            Minutes: 30

  DummyOutboundQueue:
    Type: AWS::Connect::Queue
    Properties:
      Name: Dummy Outbound Queue
      Description: Disconnected queue used to hold the "internal" outbound calls
      InstanceArn: !Ref InstanceArn
      HoursOfOperationArn: !GetAtt CallbackHours.HoursOfOperationArn
      Status: ENABLED
      Tags:
        - Key: CreatedBy
          Value: Jarrod West

  CallbackQueue:
    Type: AWS::Connect::Queue
    Properties:
      Name: Callback Queue
      Description: Where the callback will be enqueued, waiting for the agent to be ready for it
      InstanceArn: !Ref InstanceArn
      HoursOfOperationArn: !GetAtt CallbackHours.HoursOfOperationArn
      Status: ENABLED
      OutboundCallerConfig:
        OutboundCallerIdNumberArn: !Ref PrivateNumberArn
      Tags:
        - Key: CreatedBy
          Value: Jarrod West

  CallbackRoutingProfile:
    Type: AWS::Connect::RoutingProfile
    Properties:
      Name: Callback Routing Profile
      Description: Routing profile for receiving callbacks
      InstanceArn: !Ref InstanceArn
      DefaultOutboundQueueArn: !GetAtt CallbackQueue.QueueArn
      MediaConcurrencies:
        - Channel: VOICE
          Concurrency: 1
      QueueConfigs:
        - Delay: 0
          Priority: 1
          QueueReference:
            Channel: VOICE
            QueueArn: !GetAtt CallbackQueue.QueueArn
      Tags:
        - Key: CreatedBy
          Value: Jarrod West

  CallbackLambdaAssociation:
    Type: AWS::Connect::IntegrationAssociation
    Properties:
      InstanceId: !Ref InstanceArn
      IntegrationArn: !GetAtt CallbackLambda.Arn
      IntegrationType: LAMBDA_FUNCTION

  # SQS Queue
  CallbackSqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: CallbackSqsQueue.fifo
      FifoQueue: true
      ContentBasedDeduplication: true
      VisibilityTimeout: 10
      Tags:
        - Key: CreatedBy
          Value: Jarrod West

  # Lambda Role
  CallbackLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action:
            - sts:AssumeRole
          Condition:
            ArnEquals:
              aws:SourceArn: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CallbackLambda
      Policies:
        - PolicyName: ReadWriteCallbackSqsQueue
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: ReadWriteQueue
                Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                Resource: !GetAtt CallbackSqsQueue.Arn
        - PolicyName: WriteCloudwatchLogs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: CreateLogGroup
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
              - Sid: WriteLogs
                Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/CallbackLambda:*
      Tags:
        - Key: CreatedBy
          Value: Jarrod West

  # Lambda
  CallbackLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: CallbackLambda
      Handler: function.callback.handler
      Runtime: python3.10
      Role: !GetAtt  CallbackLambdaRole.Arn
      Timeout: 8
      Environment:
        Variables:
          SQS_QUEUE_URL: !Ref CallbackSqsQueue
      Code:
        S3Bucket: !Ref DeploymentBucket
        S3Key: !Sub ${DeploymentPath}/${DeploymentFilename}
      Tags:
        - Key: CreatedBy
          Value: Jarrod West
